name: CI/CD

on:
  release:
    types: [published]
  push:
    branches:
      - main

jobs:
  # lint-code:
  #   name: Lint code
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 16.x
  #         cache: yarn

  #     - name: Install packages
  #       run: yarn install

  #     - name: Lint code
  #       run: yarn run lint

  # api-testing:
  #   name: Unit and integration testing
  #   needs: lint-code
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: postgres:10.10
  #       env:
  #         POSTGRES_USER: root
  #         POSTGRES_PASSWORD: 1234
  #         POSTGRES_DB: appointment_test
  #         POSTGRES_HOST: localhost
  #         POSTGRES_PORT: 5432
  #       ports:
  #         - 5552:5432

  #   strategy:
  #     matrix:
  #       node-version: [14.x, 16.x, 17.x]

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Unit testing with Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: yarn

  #   - name: Install packages
  #     run: |
  #       cd api
  #       yarn install

  #   - name: Test the code
  #     run: |
  #       cd api
  #       yarn run test

  build-image:
    runs-on: ubuntu-latest
    name: Build and push Docker image
    # needs: api-testing
    steps:
      - uses: actions/checkout@v2

      - name: Login to Github Packages
        run: |
          echo $CR_PAT | docker login ghcr.io -u petryk --password-stdin
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
          CR_PAT: ${{ secrets.GH_PACKAGES_TOKEN }}

      - name: Build image and push it to GitHub Packages
        run: |
          cd frontend
          docker build . --tag ghcr.io/sasha-hk/alerki-frontend:${RELEASE_VERSION}
          docker push ghcr.io/sasha-hk/alerki-frontend:${RELEASE_VERSION}

  deploy:
    name: Deploy
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Deploy on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/petryk/www/Alerki
            git pull origin prod
            cd docker
            docker-compose stop
            docker pull ghcr.io/sasha-hk/alerki-frontend:latest
            docker-compose up
